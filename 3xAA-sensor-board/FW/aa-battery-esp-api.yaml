# This is an example of using ESPHome over API
# If you keep your credentials in secret.yaml it should work as is
# In order to change sleep duration and use OTA, sleep prevention has to be added in Home Assistant, see row 165-171 below

substitutions:
  name: "rdnx-aa"
  friendly_name: "RDNX-AA"
  # Allows ESP device to be automatically lined to an 'Area' in Home Assistant. Typically used for areas such as 'Lounge Room', 'Kitchen' etc
  room: ""
  device_description: "Rednexing AA ESP32"
  project_name: "Rednexing.AA ESP32"
  project_version: "0.0.1"
  update_interval: never

esphome:
  name: ${name}
  friendly_name: ${friendly_name}
  min_version: 2024.6.0
  name_add_mac_suffix: true
  project:
    name: ${project_name}
    version: ${project_version}
  on_boot:
  - priority: 1001
    then:
      - lambda: |- #we need to manually turn on awake before I2C is turned on (at prio 1000), or I2C will be held low and boot will halt
          pinMode(39, OUTPUT);
          digitalWrite(39, HIGH);
  - priority: 600
    then:
      - logger.log: 'Wake up, connect, send data, go back to sleep'
      - script.execute: consider_deep_sleep

esp32:
  board: esp32-s2-saola-1
  framework:
    type: arduino

logger:
  level: NONE #save some power by turning logging off
#  hardware_uart:
#    UART0

ota:
- platform: esphome

api:

wifi:
  ap:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  fast_connect: true
#  output_power: 13dB #output power can be reduced in order to save power if AP is not too far away, insufficient power may however slow down connection and thus consume more power
#  manual_ip: #set static IP, may speed up wifi connection
#    static_ip: 192.168.68.92
#    gateway: 192.168.68.1
#    subnet: 255.255.252.0
#    dns1: 192.168.68.1
#    dns2: 8.8.8.8

dashboard_import:
  package_import_url: github://esphome/example-configs/esphome-web/esp32.yaml@main
  import_full_config: true

i2c:
  sda: GPIO41
  scl: GPIO42

sensor:

  - platform: aht10
    variant: AHT20 #yes, has to be AHT20 even if the sensor is actually AHT10
    temperature:
      name: "Temperature"
    humidity:
      name: "Humidity"
    update_interval: 1s

  - platform: adc
    pin: GPIO04
    id: battery_voltage
    entity_category: diagnostic
    name: "Battery V"
    icon: mdi:battery
    unit_of_measurement: "V"
    accuracy_decimals: 2
    attenuation: 12dB
    samples: 10
    update_interval: 1s
    filters:
      - multiply: 3.0 

  - platform: template
    name: "Battery %"
    update_interval: 1s
    accuracy_decimals: 0
    lambda: |-
      return constrain((((id(battery_voltage).state-3.2)/1.3)*100), 0, 100);
    unit_of_measurement: "%"  
    device_class: battery
    entity_category: diagnostic

  - platform: uptime
    type: seconds
    name: Uptime
    update_interval: 1s
    entity_category: diagnostic

  - platform: wifi_signal
    name: "Wifi dB"
    id: wifi_signal_db
    update_interval: 1s
    entity_category: diagnostic

  - platform: copy
    source_id: wifi_signal_db
    name: "WiFi %"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "Signal %"
    entity_category: "diagnostic"
    device_class: ""

text_sensor:
  - platform: wifi_info
    ip_address:
      name: "IP Address"
      id: ip_address
      entity_category: diagnostic
    ssid:
      name: "Connected SSID"
      id: ssid
      entity_category: diagnostic
    mac_address:
      name: "Mac Address"
      id: mac_address
      entity_category: diagnostic

number:
  - platform: template
    name: "Sleep duration sec"
    id: sleep_duration_from_ha
    unit_of_measurement: s
    entity_category: diagnostic
    optimistic: true
    initial_value: 10
    restore_value: true
    min_value: 0
    max_value: 100000
    step: 1

button:
  - platform: factory_reset
    name: "Factory Reset"
    id: Reset
    disabled_by_default: true
    entity_category: config

binary_sensor:
  - platform: status
    name: "Status"
    entity_category: diagnostic

# Will only pick up a value if this device is configured in Home Assistant
# -> Settings -> Devices & Services -> Helpers -> Add helper -> Toggle -> Name: prevent_sleep
# Double check that the entity ID is input_boolean.prevent_sleep
# If the device isn't configured, or Home Assistant is offline, it'll default to false
  - platform: homeassistant
    id: prevent_sleep
    entity_id: input_boolean.prevent_sleep

  - platform: gpio
    pin:
      number: GPIO00
      mode: INPUT_PULLUP
      inverted: true
    name: "Boot Button"
    disabled_by_default: true
    on_multi_click:
      - timing:
        - ON for at least 4s
        then:
          - button.press: Reset

light:
  - platform: status_led
    name: "Status LED"
    disabled_by_default: true
    pin: GPIO38

deep_sleep:
  id: deep_sleep_control

script:
  - id: consider_deep_sleep
    mode: queued
    then:
      - repeat:
          count: 600
          then:
            - if:
                condition:
                  api.connected:
                then:
                  - logger.log: 'Connected!'
                  - delay: 500ms ##we need a bit of time to sync
                  - if:
                      condition:
                        binary_sensor.is_on: prevent_sleep
                      then:
                        - logger.log: 'Sleep prevented'
                        - delay: 1s
                        - script.execute: consider_deep_sleep
                      else:
                        - logger.log: 'Going back to sleep'  
                        - deep_sleep.enter: 
                            id: deep_sleep_control
                            sleep_duration: !lambda |- 
                                return id(sleep_duration_from_ha).state * 1000;                            
                else:
                  - logger.log: 'Waiting for connection'
                  - delay: 100ms
      - logger.log: 'Did not connect, going back to sleep'
      - deep_sleep.enter:
          id: deep_sleep_control
          sleep_duration: !lambda |- 
              return id(sleep_duration_from_ha).state * 1000;          
